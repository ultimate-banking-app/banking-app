name: 🔒 Security Scanning

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: '0 2 * * 1' # Weekly on Monday at 2 AM

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  codeql:
    name: 🔍 CodeQL Analysis
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: ['java', 'javascript']
    steps:
      - uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Setup Java (for Java analysis)
        if: matrix.language == 'java'
        uses: ./.github/actions/setup-java

      - name: Build Java (for CodeQL)
        if: matrix.language == 'java'
        run: mvn clean compile -DskipTests --batch-mode

      - name: Setup Node.js (for JavaScript analysis)
        if: matrix.language == 'javascript'
        uses: ./.github/actions/setup-node

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  dependency-review:
    name: 📦 Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/dependency-review-action@v4

  trivy-scan:
    name: 🛡️ Trivy Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  secret-scan:
    name: 🔐 Secret Scanning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

  container-scan:
    name: 🐳 Container Security Scan
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        service: [auth-service, account-service, payment-service, api-gateway, banking-ui]
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t ${{ matrix.service }}:latest ${{ matrix.service }}/

      - name: Scan Docker image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ matrix.service }}:latest'
          format: 'sarif'
          output: '${{ matrix.service }}-container-scan.sarif'

      - name: Upload container scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: '${{ matrix.service }}-container-scan.sarif'

  owasp-scan:
    name: 🛡️ OWASP Dependency Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: ./.github/actions/setup-java

      - name: Run OWASP Dependency Check
        run: |
          mvn org.owasp:dependency-check-maven:check \
            -DfailBuildOnCVSS=7 \
            -DsuppressionsLocation=owasp-suppressions.xml \
            --batch-mode

      - name: Upload OWASP results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: owasp-reports
          path: target/dependency-check-report.html

  npm-audit:
    name: 📦 NPM Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: ./.github/actions/setup-node

      - name: Run npm audit
        working-directory: banking-ui
        run: |
          npm audit --audit-level=moderate
          npm audit --json > npm-audit-report.json || true

      - name: Upload npm audit results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: npm-audit-report
          path: banking-ui/npm-audit-report.json
