apiVersion: apps/v1
kind: Deployment
metadata:
  name: account-service
  labels:
    app: account-service
    component: backend
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '8084'
    prometheus.io/path: '/actuator/prometheus'
spec:
  replicas: 2
  selector:
    matchLabels:
      app: account-service
  template:
    metadata:
      labels:
        app: account-service
        component: backend
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8084'
        prometheus.io/path: '/actuator/prometheus'
    spec:
      containers:
      - name: account-service
        image: banking/account-service:latest
        ports:
        - containerPort: 8084
          name: http
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "k8s"
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:postgresql://postgres:5432/banking_db"
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: AUTH_SERVICE_URL
          value: "http://auth-service:8081"
        - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
          value: "health,info,metrics,prometheus"
        - name: MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS
          value: "always"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8084
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8084
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /actuator/health
            port: 8084
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
---
apiVersion: v1
kind: Service
metadata:
  name: account-service
  labels:
    app: account-service
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '8084'
    prometheus.io/path: '/actuator/prometheus'
spec:
  selector:
    app: account-service
  ports:
  - port: 8084
    targetPort: 8084
    protocol: TCP
    name: http
  type: ClusterIP
