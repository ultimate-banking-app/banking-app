apiVersion: v1
kind: Namespace
metadata:
  name: karpenter
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: karpenter
  namespace: karpenter
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::YOUR-ACCOUNT:role/KarpenterController-banking-cluster
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: karpenter
  namespace: karpenter
spec:
  replicas: 2
  selector:
    matchLabels:
      app: karpenter
  template:
    metadata:
      labels:
        app: karpenter
    spec:
      serviceAccountName: karpenter
      containers:
      - name: controller
        image: public.ecr.aws/karpenter/karpenter:v0.32.0
        resources:
          requests:
            cpu: 1
            memory: 1Gi
          limits:
            cpu: 1
            memory: 1Gi
        env:
        - name: KUBERNETES_MIN_VERSION
          value: "1.19.0-0"
        - name: KARPENTER_SERVICE
          value: karpenter
        - name: WEBHOOK_PORT
          value: "8443"
        - name: METRICS_PORT
          value: "8080"
        - name: HEALTH_PROBE_PORT
          value: "8081"
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MEMORY_LIMIT
          valueFrom:
            resourceFieldRef:
              containerName: controller
              resource: limits.memory
              divisor: "1Mi"
        - name: FEATURE_GATES
          value: "Drift=true"
        - name: CLUSTER_NAME
          value: banking-cluster
        - name: CLUSTER_ENDPOINT
          value: YOUR-CLUSTER-ENDPOINT
        - name: AWS_REGION
          value: us-east-1
        - name: AWS_DEFAULT_INSTANCE_PROFILE
          value: KarpenterNodeInstanceProfile-banking-cluster
        - name: INTERRUPTION_QUEUE
          value: Karpenter-banking-cluster
        ports:
        - name: http-metrics
          containerPort: 8080
          protocol: TCP
        - name: http
          containerPort: 8081
          protocol: TCP
        - name: https-webhook
          containerPort: 8443
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
        readinessProbe:
          httpGet:
            path: /readyz
            port: http
---
apiVersion: v1
kind: Service
metadata:
  name: karpenter
  namespace: karpenter
spec:
  selector:
    app: karpenter
  ports:
  - name: http-metrics
    port: 8080
    targetPort: http-metrics
    protocol: TCP
  - name: https-webhook
    port: 443
    targetPort: https-webhook
    protocol: TCP
