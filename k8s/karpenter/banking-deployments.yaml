apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: banking-app
  labels:
    app: auth-service
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
        version: v1
    spec:
      serviceAccountName: banking-service-account
      # Tolerate Karpenter taints
      tolerations:
      - key: banking.com/general
        operator: Equal
        value: "true"
        effect: NoSchedule
      - key: banking.com/startup
        operator: Equal
        value: "true"
        effect: NoSchedule
      # Node affinity for general workloads
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-type
                operator: In
                values: ["general"]
          - weight: 50
            preference:
              matchExpressions:
              - key: karpenter.sh/capacity-type
                operator: In
                values: ["spot"]
      containers:
      - name: auth-service
        image: your-account.dkr.ecr.us-east-1.amazonaws.com/banking/auth-service:latest
        ports:
        - containerPort: 8081
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "eks"
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: banking-config
              key: database.url
        - name: DATABASE_USERNAME
          valueFrom:
            configMapKeyRef:
              name: banking-config
              key: database.username
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: banking-secrets
              key: database.password
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8081
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: account-service
  namespace: banking-app
  labels:
    app: account-service
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: account-service
  template:
    metadata:
      labels:
        app: account-service
        version: v1
    spec:
      serviceAccountName: banking-service-account
      tolerations:
      - key: banking.com/general
        operator: Equal
        value: "true"
        effect: NoSchedule
      - key: banking.com/startup
        operator: Equal
        value: "true"
        effect: NoSchedule
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-type
                operator: In
                values: ["general"]
          - weight: 50
            preference:
              matchExpressions:
              - key: karpenter.sh/capacity-type
                operator: In
                values: ["spot"]
      containers:
      - name: account-service
        image: your-account.dkr.ecr.us-east-1.amazonaws.com/banking/account-service:latest
        ports:
        - containerPort: 8084
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "eks"
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: banking-config
              key: database.url
        - name: DATABASE_USERNAME
          valueFrom:
            configMapKeyRef:
              name: banking-config
              key: database.username
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: banking-secrets
              key: database.password
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8084
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8084
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: banking-app
  labels:
    app: api-gateway
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
        version: v1
    spec:
      serviceAccountName: banking-service-account
      tolerations:
      - key: banking.com/compute-optimized
        operator: Equal
        value: "true"
        effect: NoSchedule
      - key: banking.com/startup
        operator: Equal
        value: "true"
        effect: NoSchedule
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-type
                operator: In
                values: ["compute-optimized"]
          - weight: 80
            preference:
              matchExpressions:
              - key: karpenter.sh/capacity-type
                operator: In
                values: ["spot"]
      containers:
      - name: api-gateway
        image: your-account.dkr.ecr.us-east-1.amazonaws.com/banking/api-gateway:latest
        ports:
        - containerPort: 8090
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "eks"
        resources:
          requests:
            memory: "256Mi"
            cpu: "125m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8090
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8090
          initialDelaySeconds: 30
          periodSeconds: 10
