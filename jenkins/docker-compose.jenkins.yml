version: '3.8'

services:
  jenkins:
    image: jenkins/jenkins:lts
    container_name: banking-jenkins
    ports:
      - "8085:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - ./jenkins-casc.yml:/var/jenkins_home/casc_configs/jenkins.yml
    environment:
      - CASC_JENKINS_CONFIG=/var/jenkins_home/casc_configs/jenkins.yml
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false -Xmx2g
    networks:
      - banking-network
    depends_on:
      - sonarqube
      - nexus

  sonarqube:
    image: sonarqube:community
    container_name: banking-sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
      - SONAR_JDBC_URL=jdbc:postgresql://postgres:5432/sonarqube
      - SONAR_JDBC_USERNAME=sonarqube
      - SONAR_JDBC_PASSWORD=sonarqube
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks:
      - banking-network
    depends_on:
      - postgres

  nexus:
    image: sonatype/nexus3
    container_name: banking-nexus
    ports:
      - "8086:8081"
    environment:
      - NEXUS_SECURITY_RANDOMPASSWORD=false
    volumes:
      - nexus_data:/nexus-data
    networks:
      - banking-network

  postgres:
    image: postgres:13
    container_name: banking-postgres
    environment:
      POSTGRES_DB: banking_db
      POSTGRES_USER: banking_user
      POSTGRES_PASSWORD: banking_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-sonar-db.sql:/docker-entrypoint-initdb.d/init-sonar-db.sql
    networks:
      - banking-network

  redis:
    image: redis:alpine
    container_name: banking-redis
    ports:
      - "6379:6379"
    networks:
      - banking-network

  # Security scanning tools
  trivy:
    image: aquasec/trivy:latest
    container_name: banking-trivy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - trivy_cache:/root/.cache/trivy
    networks:
      - banking-network
    command: ["server", "--listen", "0.0.0.0:4954"]
    ports:
      - "4954:4954"

  # OWASP Dependency Check
  dependency-check:
    image: owasp/dependency-check:latest
    container_name: banking-dependency-check
    volumes:
      - dependency_check_data:/usr/share/dependency-check/data
    networks:
      - banking-network

  # Grafana for monitoring
  grafana:
    image: grafana/grafana:latest
    container_name: banking-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - banking-network

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: banking-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - banking-network

volumes:
  jenkins_home:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  nexus_data:
  postgres_data:
  trivy_cache:
  dependency_check_data:
  grafana_data:
  prometheus_data:

networks:
  banking-network:
    driver: bridge
