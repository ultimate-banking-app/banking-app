version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: banking
      POSTGRES_USER: banking
      POSTGRES_PASSWORD: banking123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Banking Services
  auth-service:
    build: ./auth-service
    ports:
      - "8081:8081"
    depends_on:
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: docker

  account-service:
    build: ./account-service
    ports:
      - "8084:8084"
    depends_on:
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: docker

  audit-service:
    build: ./audit-service
    ports:
      - "8085:8085"
    depends_on:
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: docker

  balance-service:
    build: ./balance-service
    ports:
      - "8086:8086"
    depends_on:
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: docker

  deposit-service:
    build: ./deposit-service
    ports:
      - "8087:8087"
    depends_on:
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: docker

  notification-service:
    build: ./notification-service
    ports:
      - "8088:8088"
    depends_on:
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: docker

  transfer-service:
    build: ./transfer-service
    ports:
      - "8089:8089"
    depends_on:
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: docker

  withdrawal-service:
    build: ./withdrawal-service
    ports:
      - "8091:8091"
    depends_on:
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: docker

  api-gateway:
    build: ./api-gateway
    ports:
      - "8090:8090"
    depends_on:
      - auth-service
      - account-service
    environment:
      SPRING_PROFILES_ACTIVE: docker

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  postgres_data:
  grafana_data:
