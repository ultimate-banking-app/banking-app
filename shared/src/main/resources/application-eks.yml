spring:
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://banking-db.banking-app.svc.cluster.local:5432/banking}
    username: ${DATABASE_USERNAME:banking}
    password: ${DATABASE_PASSWORD:banking123}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
  redis:
    host: ${REDIS_HOST:banking-redis.banking-app.svc.cluster.local}
    port: ${REDIS_PORT:6379}
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
  health:
    readinessstate:
      enabled: true
    livenessstate:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
      environment: eks

logging:
  level:
    com.banking: ${LOGGING_LEVEL:INFO}
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
  config: classpath:logback-spring.xml

server:
  shutdown: graceful
  tomcat:
    threads:
      max: 200
      min-spare: 10

spring.lifecycle.timeout-per-shutdown-phase: 30s
