.security-backend:
  image: maven:3.9-openjdk-17
  cache:
    key: maven-cache
    paths:
      - .m2/repository/
    policy: pull
  before_script:
    - export MAVEN_USER_HOME=`pwd`/.m2
  script:
    - echo "Running backend security scans..."
    - mvn $MAVEN_CLI_OPTS org.owasp:dependency-check-maven:check
        -DfailBuildOnCVSS=7
        -DsuppressionsLocation=owasp-suppressions.xml
    - mvn $MAVEN_CLI_OPTS compile spotbugs:check
  artifacts:
    reports:
      dependency_scanning:
        - "target/dependency-check-report.json"
    paths:
      - "target/dependency-check-report.html"
      - "target/spotbugsXml.xml"
    expire_in: 1 week
  allow_failure: true

.security-frontend:
  image: node:18-alpine
  cache:
    key: npm-cache
    paths:
      - banking-ui/node_modules/
    policy: pull
  before_script:
    - cd banking-ui
  script:
    - echo "Running frontend security scans..."
    - npm audit --audit-level=moderate --json > npm-audit.json || true
    - npx retire --js --outputformat json --outputpath retire-report.json || true
  artifacts:
    reports:
      dependency_scanning:
        - banking-ui/npm-audit.json
    paths:
      - banking-ui/retire-report.json
    expire_in: 1 week
  allow_failure: true

container-scanning:
  image: docker:24-dind
  services:
    - docker:24-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - apk add --no-cache curl
    - curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
  script:
    - |
      echo "Scanning container images..."
      for service in auth-service account-service payment-service api-gateway banking-ui; do
        if docker images | grep -q "$CI_REGISTRY_IMAGE/$service:$CI_COMMIT_SHA"; then
          echo "Scanning $service image..."
          trivy image --exit-code 0 --severity HIGH,CRITICAL --format json --output $service-scan.json $CI_REGISTRY_IMAGE/$service:$CI_COMMIT_SHA
        fi
      done
  artifacts:
    reports:
      container_scanning:
        - "*-scan.json"
    expire_in: 1 week
  allow_failure: true

sast:
  stage: security
  include:
    - template: Security/SAST.gitlab-ci.yml
  variables:
    SAST_EXCLUDED_PATHS: "spec, test, tests, tmp, node_modules"

dependency-scanning:
  stage: security
  include:
    - template: Security/Dependency-Scanning.gitlab-ci.yml

secret-detection:
  stage: security
  include:
    - template: Security/Secret-Detection.gitlab-ci.yml
